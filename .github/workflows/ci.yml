name: CI

on:
  push:
    branches:
      - publish-test-branch
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Build, test and deploy to riff-raff
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}
          aws-region: eu-west-1

      - uses: actions/setup-node@v3
        with:
          node-version: 18

        # Install then build production-ready bundled files
      - name: Install deps
        run: |
          npm ci
      - name: lint and test
        run: |
          npm run lint
          npm run test

      - name: Bundle and zip
        run: |
          npm run bundle:ui
          npm run bundle:api
          zip -r dist/newsletters-tool.zip dist
          cp dist/newsletters-tool.zip dist/newsletters-api.zip

        # Build Cloudformation definition from CDK
      - name: Build and synth CDK
        working-directory: ./cdk
        run: |
          npm ci
          npm run lint
          npm run test
          npm run synth

        # Upload artifacts for newsletters internal tool
      - name: Upload riff-raff artifacts - newsletters-tool
        uses: guardian/actions-riff-raff@v2
        with:
          app: newsletters-tool
          configPath: riff-raff.yaml
          contentDirectories: |
            newsletters-tool-cfn:
              - cdk/cdk.out/NewslettersTool-CODE.template.json
              - cdk/cdk.out/NewslettersTool-PROD.template.json
            newsletters-tool:
              - dist/newsletters-tool.zip
            newsletters-api:
              - dist/newsletters-api.zip

      - name: Build type library
        run: npm run type-library-build

      - name: Publish type library
        working-directory: ./dist/libs/editorial-newsletters-ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm login
          npm publish
